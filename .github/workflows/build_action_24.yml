name: Build Android
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      # Used to cache dependencies with a timeout
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_ENV
        shell: bash
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-global-${{ runner.os }}-
      - name: Cache Buildozer directory in app
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-${{ github.run_id }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/android-sdk
          key: ${{ runner.os }}-android-sdk-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-
      - name: Cache Android NDK
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/android-ndk-r25b #relative path as android-ndk-{version}
          key: ${{ runner.os }}-android-ndk-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-android-ndk-
      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y \
            build-essential \
            git \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            libunwind-dev \
            zlib1g-dev
          sudo apt-get install -y \
            libsqlite3-dev \
            sqlite3 \
            bzip2 \
            libbz2-dev \
            zlib1g-dev \
            openssl \
            libgdbm-dev \
            libgdbm-compat-dev \
            liblzma-dev \
            libreadline-dev \
            uuid-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good
          sudo apt-get install -y \
            zip \
            unzip \
            autoconf \
            libtool \
            pkg-config \
            libncurses5-dev \
            libncursesw5-dev \
            cmake \
            libffi-dev \
            libssl-dev \
            automake
      # Set up Java 17 required by Gradle
      - name: Setup Java 17 required by Gradle
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # or 'zulu', 'liberica', etc.
          java-version: '17'
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' #set your python version
      # Install pip dependencies
      - name: Install pip dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer==1.5.0 cython==0.29.33 python-for-android
      
      # Initialize python-for-android
      - name: Initialize python-for-android
        run: |
          mkdir -p .buildozer/android/platform
          cd .buildozer/android/platform
          if [ ! -d "python-for-android" ]; then
            git clone https://github.com/kivy/python-for-android.git
            cd python-for-android
            pip install -e .
          fi
      
      # Create fix_paths script
      - name: Create path fix script
        run: |
          echo "#!/bin/bash" > fix_paths.sh
          echo 'find .buildozer -name "*.py" -type f -exec sed -i "s|include/python3.1|include/python3.11|g" {} \;' >> fix_paths.sh
          echo 'find ~/.buildozer -name "*.py" -type f -exec sed -i "s|include/python3.1|include/python3.11|g" {} \;' >> fix_paths.sh
          chmod +x fix_paths.sh
      
      # Modify buildozer.spec if needed
      - name: Modify buildozer.spec
        run: |
          # Python 버전 명시
          if grep -q "requirements =" buildozer.spec; then
            sed -i 's/^requirements =.*/requirements = python3==3.11.0,kivy,kivymd/' buildozer.spec
          else
            echo "requirements = python3==3.11.0,kivy,kivymd" >> buildozer.spec
          fi
          # NDK 버전 명시
          if grep -q "android.ndk =" buildozer.spec; then
            sed -i 's/^android.ndk =.*/android.ndk = 25b/' buildozer.spec
          else
            echo "android.ndk = 25b" >> buildozer.spec
          fi
          # 추가 빌드 옵션
          if grep -q "android.extra_args =" buildozer.spec; then
            sed -i 's/^android.extra_args =.*/android.extra_args = --ignore-setup-py,--debug/' buildozer.spec
          else
            echo "android.extra_args = --ignore-setup-py,--debug" >> buildozer.spec
          fi
      
      # Build with Buildozer
      - name: Build with Buildozer
        id: buildozer
        run: |
          # Python 경로 설정
          export PYTHONPATH="${PYTHONPATH}:$(pwd)/.buildozer/android/platform/build-arm64-v8a/build/other_builds/python3-liblzma/arm64-v8a__ndk_target_21/python3/Include"
          export CFLAGS="-I$(pwd)/.buildozer/android/platform/build-arm64-v8a/build/other_builds/python3-liblzma/arm64-v8a__ndk_target_21/python3/Include"
          export LDFLAGS="-L$(pwd)/.buildozer/android/platform/build-arm64-v8a/build/other_builds/python3-liblzma/arm64-v8a__ndk_target_21/python3/android-build"
          
          # p4a에 대한 환경 변수 설정
          export P4A_DIRECTORY=$(pwd)/.buildozer/android/platform/python-for-android
          
          # 빌드 준비
          buildozer -v android p4a -- --version
          
          # Python 헤더 경로 수정
          ./fix_paths.sh
          
          # 실제 빌드 실행
          yes | buildozer -v android debug
      
      # Upload artifacts
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            bin/*.apk
            bin/*.aab
